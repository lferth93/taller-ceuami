{
  "/": {
    "title": "_index",
    "content": "# Planificación del curso GNU/Linux\n## Sesiones\n{{\u003ccolumns\u003e}}\n### Sesión 1\nDía: 7 de Agosto del 2013  \nLugar: AT-106  \nHora: 14:00 - 16:00\n\u003c---\u003e\n### Sesión 2\nDía: 24 de Agosto del 2013  \nLugar: AT-105  \nHora: 14:00 - 16:00\n{{\u003c/columns\u003e}}\n## Instructores\n* Eduardo Romero Arzate\n* Luis Fernando Torres Hernández\n\n## Objetivo general\nEl objetivo de este taller es dar bases solidas sobre el uso de la terminal en sistemas operativos GNU/Linux, al terminar el taller los asistentes deben de ser capaces de realizar tareas básicas de manejo de archivos así como usar algunas herramientas del sistema.\n\n## Contenidos\n* [Linea de tiempo de GNU/Linux](docs/historia/) (30 minutos, Eduardo Romero Arzate)\n\t* Historia de Unix\n\t* Historia de GNU\n\t* Historia de Linux\n\t* Ejemplos de Software Libre\n* [Comandos básicos](docs/comandos_basicos/) (30 minutos, Luis Fernando Torres Hernández)\n\t* man\n\t* pwd\n\t* ls\n\t* cd\n* [Comandos para archivos](docs/comandos_archivos/) (30 minutos, Luis Fernando Torres Hernández)\n\t* cp\n\t* mv\n\t* rm\n\t* mkdir\n\t* rmdir\n* [Comandos útiles variados](docs/comandos_utiles/) (30 minutos, Luis Fernando Torres Hernández)\n\t* bc\n\t* cal\n\t* date\n\t* find\n\t* grep \n* [Vim](docs/vim/) (50 minutos, Eduardo Romero Arzate)\n",
    "lastmodified": "2023-08-24T13:04:36.232003173-06:00",
    "tags": []
  },
  "/docs/comandos_archivos/": {
    "title": "Comandos para archivos",
    "content": "# Comandos para archivos\nEn Unix el concepto de archivo es muy importante, pero ¿Como trabajamos con archivos?\n\nLas acciones comunes que se pueden realizar con archivos son.\n* [[docs/comandos_archivos/_index#Crear archivos|Crearlos]]\n* [[docs/comandos_archivos/_index#Borrar archivos|Borrarlos]]\n* [[docs/comandos_archivos/_index#Copiar archivos|Copiarlos]]\n* [[docs/comandos_archivos/_index#Organizar archivos|Organizarlos]]\n* [[/docs/comandos_archivos/_index#Mover archivos|Moverlos]]\n\nPara cada una de estas tareas tenemos comandos que nos ayudan.\n\n## Crear archivos \nPara crear archivos tenemos el comando `touch`. este comando crea un archivo vació con el nombre indicado.\n\n``` bash\n$ touch \u003copción\u003e... \u003carchivo\u003e\n```\n\n\u003e[!note] Nota\n\u003e\n\u003eEl propósito original de este comando es modificar la fecha de acceso y modificación del archivo, pero si el archivo no existe un efecto secundario es que lo crea.\n\n\u003e[!example] Ejercicio\n\u003e\n\u003eCrea los archivos `gato_1` ... `gato_10` usando el comando `touch`.\n## Borrar archivos\nCuando queremos borrar archivos usamos el comando `rm` (Remove), este comando acepta una lista de archivos que serán borrados.\n```bash\n$ rm \u003copción\u003e... \u003carchivo\u003e... \n```\n\u003e[!note] Nota\n\u003e\n\u003e`rm` también puede borrar un directorio junto con todo su contenido.\n\n\u003e[!example] Ejercicio\n\u003e\n\u003eElimina los archivos que creaste en el ejercicio anterior.\n## Copiar archivos\nCopiar archivos es una tarea muy común, para esto existe el comando `cp` (Copy) , la formas formas de usar este comando son\n```bash\n$ cp \u003copción\u003e... \u003corigen\u003e \u003cdestino\u003e\n$ cp \u003copción\u003e... \u003corigen\u003e... \u003cdirectorio\u003e\n```\n\n\u003e[!note] Nota \n\u003e\n\u003eAl igual que `rm` este comando también puede actuar sobre un directorio y todo su contenido.\n\n\u003e[!example] Ejercicio.\n\u003e\n\u003e1. Crea los archivos `perro_1` ... `perro_10`\n\u003e1. Copia estos archivos a los archivos `oso_1` ... `oso_10`.\n## Organizar archivos\nLos archivos se organizan en directorio. Los directorios se pueden crear y eliminar.\n### Crear directorios\nPara crear directorios se usa el comando `mkdir` (Make Directory). \n```bash\n$ mkdir \u003copción\u003e... \u003cdirectorio\u003e...\n```\n\n\u003e[!example] Ejercicio.\n\u003e\n\u003e1. Crea los directorios `perros` y `osos`\n\u003e1. Copia los archivos que creaste en el ejercicio anterior al lugar adecuado \n\u003e1. Elimina los archivos originales.\n\n### Borrar directorios\nPara borrar directorios podemos usar `rmdir` (Remove Directory)\n\n```bash\n$ rmdir \u003copción\u003e... \u003cdirectorio\u003e...\n```\n\n\u003e[!note] Nota\n\u003e\n\u003eEste comando solo borra directorios vacíos, por lo tanto se debe borrar el contenido antes de eliminar el directorio.\n\n\u003e[!example] Ejercicio\n\u003e\n\u003eElimina el directorio `osos` junto con su contenido.\n## Mover archivos\nEn ejercicios anteriores se movieron archivos copiandolos y eliminando los originales, pero esto se puede hacer con un solo comando. El comando es `mv` (Move)\n\n```bash\n$ mv \u003copción\u003e... \u003corigen\u003e \u003cdestino\u003e\n$ mv \u003copción\u003e... \u003corigen\u003e... \u003cdirectorio\u003e\n```\n\n\u003e[!note] Nota\n\u003e\n\u003eEste comando tambien puede ser usado para cambiar el nombre a un archivo o directorio.\n\n\u003e[!example] Ejercicio\n\u003e1. Crea el directorio `animales` \n\u003e1. Mueve el directorio `perros` junto con todo su contenido dentro del directorio `animales` ",
    "lastmodified": "2023-08-24T13:05:57.215345003-06:00",
    "tags": []
  },
  "/docs/comandos_basicos/": {
    "title": "Comandos básicos",
    "content": "# Introducción\nEn los sistemas operativos tipo Unix como GNU/Linux la principal forma de interacción con el sistema se hace a través de una terminal de comandos.\n\nAl estar dentro de una terminal de comandos uno de los conceptos mas importantes es el sistema de archivos.\n",
    "lastmodified": "2023-08-21T12:24:53.311305941-06:00",
    "tags": []
  },
  "/docs/comandos_basicos/comandos": {
    "title": "Comandos basicos para el sistema de archivos",
    "content": "\n## Comandos imprescindibles\nPrimero revisaremos algunos comando básicos que son de mucha utilidad cuando empiezas a usar una terminal de comandos.\n\n### ¿Como obtener ayuda sobre la utilización de algún comando?\nEn Linux la mayoría de los comandos que tiene disponible sistema tienen información que nos ayuda a entender como se pueden usar.\n\nPara poder conocer esta información tenemos algunas opciones diferentes.\n* Leer el manual del comando.\n* Leer la ayuda del comando.\n* Usar el comando `info`\n\n#### El manual\nPara leer el manual de algún comando lo único que tenemos que hacer es ejecutar el comando \n``` bash\n$ man \u003ccomando\u003e  \n```\ndonde `\u003ccomando\u003e` es el comando del que queremos información.\n\n*¿Como podemos leer el manual del comando `man`?*\n{{\u003cdetails \"Respuesta\"\u003e}}\n```bash\n$ man man\n```\n{{\u003c/details\u003e}}\n\u003e[!note] Nota\n\u003e\n\u003eEl uso básico de `info` es igual al de `man`, con la diferencia que `info` puede tener mas información.\n\n#### La ayuda\nPara el la ayuda de un comando el comando que necesitamos es:\n```shell\n$ \u003ccomando\u003e --help\n```\n\nLa mayoría de los comando siguen esta convención, aunque depende de los desarrolladores.\n\n*¿Como podemos leer la ayuda del comando `man`?*\n{{\u003cdetails \"Respuesta\"\u003e}}\n```bash\n$ man --help\n```\n{{\u003c/details\u003e}}\n\n### ¿Como muestro un mensaje en la terminal?\nSiempre es útil poder mostrar mensajes en la terminal, para esta tarea tenemos `echo`, su uso es \n``` bash\n$ echo \"\u003cmensaje\u003e\"\n```\n\u003e[!note] Opciones\n\u003e\n \u003ePara mas opciones revisar el manual o la ayuda del comando.\n\n## Comandos para el sistema de archivos\n\nComo ya se menciono previamente, al estar en una terminal es importante saber usar el sistema de archivos. En esta sección se mostrar como realizar algunas de las tareas mas comunes relacionadas con el sistema de archivos.\n\n### ¿Como saber en donde estoy?\nLa terminal siempre trabaja desde un directorio del sistema de archivos (Working Directory), esto afecta el comportamiento de algunos comandos y a las rutas relativas.\n\nPara saber cual es el directorio actual en el que nos encontramos se usa el comando `pwd` (Print Working Directory).\n\n### ¿Como se que es lo que hay en algún directorio?\nSi queremos mostrar el contenido de algún directorio usamos `ls` (List) de la siguiente forma:\n``` bash\n$ ls \u003cruta\u003e\n```\ndonde `\u003cruta\u003e` es una ruta absoluta o relativa al directorio.\n\n\u003e[!note] Nota\n\u003e\n\u003eSi usamos `ls` sin algún argumento nos mostrara el contenido del directorio de trabajo actual.\n\n*¿Como muestro el contenido oculto del directorio de trabajo?*\n{{\u003cdetails \"Respuesta\"\u003e}}\n```bash\n$ ls -a \n```\n{{\u003c/details\u003e}}\n\n### ¿Como me muevo a otro directorio?\nEs muy común cambiar de directorio de trabajo mientras usamos la terminal, esto se logra con el comando `cd` (Change Directory)\n\n```bash\n$ cd \u003cruta\u003e\n```\n`\u003cruta\u003e` es la ruta al nuevo directorio de trabajo.\n\n*¿Cuales son los pasos para cambiar al directorio `/home` y listar su contenido?*\n{{\u003cdetails \"Respuesta\"\u003e}}\n```bash\n$ cd /home\n$ ls\n```\n{{\u003c/details\u003e}}",
    "lastmodified": "2023-08-21T11:42:14.252274498-06:00",
    "tags": []
  },
  "/docs/comandos_basicos/sistema_archivos": {
    "title": "Sistema de archivos en Linux",
    "content": "\n## ¿Que es un sistema de archivos?\nEn general, el propósito básico de un sistema de archivos es representar y organizar los recursos de almacenamiento\ndel sistema.\n\n¿Cuáles de las siguientes cosas esperarías encontrar en un sistema de archivos?\n* Procesos\n* Dispositivos de audio\n* Parámetros del Kernel\n* canales de comunicación entre procesos\n\n{{\u003c details \"Respuesta\"\u003e}}\nSi el sistema es tipo UNIX *¡Todas las de arriba y más!*\n\n{{\u003c details \u003e}}\nY sí, también algunos archivos regulares.\n\n{{\u003c details \u003e}}\nEn un sistema tipo UNIX *Todo es un archivo*\n\n{{\u003c/ details \u003e}}\n{{\u003c/ details \u003e}}\n{{\u003c/ details \u003e}}\n\n* Ventajas de este tipo de sistemas de archivos\n\t* Mismo conjunto de comandos para programar e interactuar.\n\t* Fácil acceso desde la terminal\n* Desventajas de este tipo de sistemas de archivos\n\t* Es una especie de monstruo de Frankenstein\n \n## Principales componentes del sistema de archivos\n\n* Namespace - Una forma de nombrar las cosas y organizarlas de forma jerárquica\n* API - un conjunto de llamadas al sistema para navegación y manipulación de objetos\n* Modelo de seguridad - Un modelo para proteger, esconder y compartir cosas\n* Implementación - software para unir el modelo al hardware\n\nEn otras palabras\n\n* Árbol de archivos y pathname\n* comandos de navegación y manipulación de archivos\n* esquema de permisos\n* drivers o módulos del kernel\n\n## Pathnames\n\nLos archivos en un sistema tipo Unix están organizados en una *única* estructura jerárquica de varios niveles conocida como árbol de directorios.\n\nEn la parte superior del sistema de archivos hay un directorio\nllamado \"raíz\" que se representa con \"/\". Todos los demás archivos son \"descendientes\" de la raíz.\n\n![Ejemplo de Pathname](/docs/comandos_basicos/images/pathname.png)\n\nLa lista de directorios que se deben recorrer para localizar un archivo en particular más el nombre de ese archivo forman un pathname o ruta.\n\nLos nombres de directorios y de archivos van separados por\nuna `/` (barra oblicua) en las rutas.\n\n### Ruta absoluta\n\nUna ruta absoluta se basa en la raíz del árbol de Linux. Toda ruta absoluta empieza, por `/`.\n\n*¿Cuál es la ruta absoluta del archivo `glop`?*\n{{\u003cdetails \"Respuesta\"\u003e}}\n`/tmp/glop`\n{{\u003c/details\u003e}}\n\n*¿Cuál es la ruta absoluta del archivo `notas`?*\n{{\u003cdetails \"Respuesta\"\u003e}}\n`/home/willy/notas`\n{{\u003c/details\u003e}}\n\n*¿Cuál es la ruta absoluta del archivo `triángulo`?*\n\n*¿Cuál es la ruta absoluta del archivo `.bashrc?`*\n\n### Ruta relativa\n\nLas rutas relativas dependen del directorio actual en el que se encuentra el usuario. Para definir una ruta, se usan los símbolos:\n\n| Símbolo | Descripción|\n|:--------:|-------------|\n| `/`    | Hace referencia al directorio raíz y a la separación entre directorios|\n| `.`  | Hace referencia al directorio actual|\n| `..` | Hace referencia al directorio padre del directorio actual\n\n*¿Cuál es la ruta relativa del archivo `glop`, si estoy en el directorio `/`?*\n{{\u003cdetails \"Respuesta\"\u003e}}\n`tmp/glop`\n{{\u003c/details\u003e}}\n\n*¿Cuál es la ruta relativa del archivo `archivo1`, si estoy en el directorio `colores`?* \n{{\u003cdetails \"Respuesta\"\u003e}}\n`../../gerardo/archivo1`\n{{\u003c/details\u003e}}\n\n## Árbol de archivos\n![Jerarquia de archivos](/docs/comandos_basicos/images/arbol.png)\n\n|Directorio |Descripción|\n|:---:|---|\n| */* | El carácter de barra inclinada / por sí solo denota la raíz del árbol del sistema de archivos.\n| */bin* | Significa \"binarios\" y contiene comandos importantes, como ls o cp, que generalmente necesitan todos los usuarios.\n| /boot| Contiene todos los archivos necesarios para un proceso de arranque exitoso.\n| /dev | Significa \"dispositivos\". Contiene representaciones de archivos de dispositivos periféricos y pseudodispositivos.\n| */home*| contiene los directorios de inicio de los usuarios.\n| /lib| contiene bibliotecas del sistema y algunos archivos críticos, como módulos del kernel o controladores de dispositivos.\n| /media | punto de montaje predeterminado para dispositivos extraíbles, como memorias USB, reproductores multimedia, etc.\n| /mnt| significa \"montar\". Contiene puntos de montaje del sistema de archivos.\n| /proc| sistema de archivos virtual que muestra información sobre los procesos como archivos.\n| */root*| el directorio de inicio del superusuario \"root\", es decir, el administrador del sistema.\n| */sbin* | Comandos importantes para la administración del sistema.\n| /tmp | Un lugar para archivos temporales.\n| /usr| contiene ejecutables, bibliotecas y recursos compartidos que no son críticos para el sistema.\n| /usr/bin| este directorio almacena todos los programas binarios distribuidos con el sistema operativo que no residen en /bini o /sbin.\n| /usr/lib| almacena las bibliotecas y los archivos de datos necesarios para los programas almacenados en /usr o en otro lugar.\n| /var| una abreviatura de \"variable\". Un lugar para archivos que pueden cambiar con frecuencia, especialmente en tamaño. (logs por ejemplo)\n\u003e[!note] Nota\n\u003e\n\u003eEsta información está disponible mediante el comando `$ man hier`\n\n## Tipos de archivos\n\nEl sistema de archivos UNIX contiene varios tipos diferentes de archivos:\n\n* *Archivos ordinarios*: Series de bytes, Pueden contener datos, texto o instrucciones de programa.\n* *Directorios*: Contienen referencias a otros archivos (nombres de archivos)\n* *Enlace simbólico*: Distintas rutas para un mismo archivo de forma relativa.\n* Enlace duro: Distintas rutas para un mismo archivo de forma absoluta.\n* Dispositivos de bloque y caracter: Representan un dispositivo físico real, como una impresora\n* Pipes (Tuberías): para vincular comandos. La tubería actúa como un archivo temporal que solo existe para contener datos de un comando hasta que los lea otro.\n* Sockets: permite una comunicación limpia entre procesos, incluso procesos ejecutándose en otras computadoras.\n",
    "lastmodified": "2023-08-21T11:48:05.80261552-06:00",
    "tags": []
  },
  "/docs/comandos_utiles/": {
    "title": "Comandos útiles",
    "content": "# Comandos útiles\nComo ya se menciono previamente la terminal es la principal forma de interacción con los sistema tipo Unix, por esta razón se han desarrollado una gran cantidad de herramientas para diferentes propósitos que funcionan completamente dentro de una terminal, estas herramientas incluyen reproductores de música, navegadores web, etc.\n\nEn esta sección se presentan algunas de las herramientas de uso mas común en la terminal. \n\n## Fecha del sistema\nPara poder ver la fecha y hora del sistema tenemos el comando `date`, para ver la hora y fecha actuales solo hace falta ejecutar el comando sin ninguna opción.\n\n```bash\n$ date\n```\n\n\u003e[!note] Nota\n\u003e\n\u003eEste comando no solo muestra la hora y fecha, también se puede usar para cambiar esta información. \n\u003e\n\u003eEste comando da la salida en el formato que se le solicite.\n\n## Calendario\nEl comando del calendario es `cal`, este comando nos puede mostrar cualquier año, una cantidad variable de meses, entre otras opciones.\n```bash\n$ cal\n```\n\nPara mas información consultar el manual de cal.\n\n## Calculadora\nSiempre es útil tener una calculadora a la mano. `bc` es una calculadora muy potente que nos permite realizar las operaciones matemáticas elementales así como definir variables y funciones, también cuenta con las funciones matemáticas mas comunes.\n\n```bash\n$ bc -l\n```\n\n## Buscador de archivos\nBuscar archivos es una tarea muy común, el comando que realiza esto es `find`,\neste comando no solo nos permite filtrar nuestra búsqueda por el nombre del archivo.\n\nCambien nos permite definir una acción a realizar para cada uno de los archivos que coinciden con nuestros criterios de búsqueda.\n\n```bash\n$ find \u003copción\u003e... \u003cdirectorio\u003e \u003cexpresion\u003e\n```\n\nEn este comando `\u003cexpresion\u003e` define los criterios de búsqueda y las acciones que se realizaran sobre los archivos filtrados.\n\n## Buscador de texto\nDebido a que en Unix manejamos una gran cantidad de archivos de texto es necesario tener una herramienta que nos permita buscar texto de forma eficiente, para esto existe `grep`, con este comando podemos buscar tanto texto explicito como patrones de texto.\n\nEsta herramienta solo nos mostrara las lineas del archivo que coinciden con nuestros criterios de búsqueda.\n\n```bash\n$ grep \u003copción\u003e... -F -e \u003ctexto\u003e... \u003carchivo\u003e...\n$ grep \u003copción\u003e... -e \u003cpatron\u003e... \u003carchivo\u003e...\n```",
    "lastmodified": "2023-08-24T13:06:03.825345725-06:00",
    "tags": []
  },
  "/docs/historia/": {
    "title": "Historia",
    "content": "## Introducción\nLa palabra clave es:: \u003cins\u003eHERRAMIENTA\u003c/ins\u003e\n\nPiensen en la relación que tienen con su herramientas\n\n* Cuidados\n* Perfeccionamiento de habilidades\n* Personalización\n \n### El sistema operativo GNU/LINUX es una herramienta\n\n*¿Qué es un sistema operativo?*\n\n{{\u003cdetails \"Posibles respuestas\"\u003e}}\n* Un software que controla los recursos de la computadora:\n\t* La memoria de la computadora\n\t* los elementos que hacen procesamiento\n\t* los dispositivos conectados a la computadora\n* Una colección de aplicaciones que hacen que una computadora sea más simple\ny comprensible para los programadores o usuarios.\n{{\u003c/details\u003e}}\n\n### Algunas características del SO GNU/LINUX\n... Y por qué les puede resultar útil  aprender a usar esta herramienta.\n\n* Es eficiente y versátil:: Útil para cualquier equipo de computo\n* Es consistente:: Fácil de aprender.\n* Es un desarrollo de software libre y código abierto:: Importante para su libertad\n* Tiene una estrecha relación con las universidades y el software científico:: Para su desarrollo profesional\n\n## Historia del sistema operativo GNU/LINUX\n\n### UNIX\n#### La cuna de UNIX: Los laboratorios Bell\n*Importante* compañía de investigación y desarrollo científico,fundada en\nenero de 1925\n\nPara enfatizar aún más la palabra importante:\n\n[Algunos premios por trabajo realizada en los laboratorios Bell o por gente que trabajó en ellos](https://en.wikipedia.org/wiki/Bell_Labs#Nobel_Prize,_Turing_Award,_IEEE_Medal_of_Honor)\n\n#### Ken Thompson y Dennis Ritchie\n![Ken y Dennis](/docs/historia/images/KTyDR.jpg)\n\n| | Conocido, entre muchas otras cosas, por|\n|---|---|\n| Ken Thompson | \u003cul\u003e\u003cli\u003eCrear el lenguaje de programación B\u003c/li\u003e \u003cli\u003eSu trabajo en el desarrollo de Go\u003c/li\u003e \u003cli\u003eLa computadora de ajedrez Belle\u003c/li\u003e \u003cli\u003e*Co-crear el sistema operativo UNIX*\u003c/li\u003e\u003c/ul\u003e|\n| Dennis Ritchie | \u003cul\u003e\u003cli\u003eCrear el lenguaje de programación C\u003c/li\u003e \u003cli\u003eCo-escribir el libro _El lenguaje de programación C_ \u003c/li\u003e \u003cli\u003e *Co-crear el sistema operativo UNIX*\u003c/li\u003e\u003c/ul\u003e|\n\n\u003cp align=\"center\"\u003e\u003ciframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/XvDZLjaCJuw?start=198\u0026end=314\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"1\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\n|Año| Evento|\n|:---:|---|\n| 1964|Desarrollo de Multics\n| 1969| Primera implementación de UNIX Para [PDP-7](https://www.youtube.com/watch?v=pvaPaWyiuLA\u0026t=1s)\n| 1970| Unix fue implementado PDP-11 *En ensamblador*\n| 1971| Primera edición oficial de UNIX\n| 1972 | Se escribe Unix *en C*\n| 1975 | Sexta edición de UNIX \u003cbr\u003e\u003cul\u003e \u003cli\u003e La primera edición que se uso ampliamente fuera de AT\u0026T\u003c/li\u003e \u003cli\u003e licenciada para universidades a cambio de una cuota nominal por distribución.\u003c/li\u003e \u003cli\u003e contenía:\u003c/li\u003e \u003cul\u003e\u003cli\u003e Documentación\u003c/li\u003e \u003cli\u003e *Código fuente del Kernel*\u003c/li\u003e\u003c/ul\u003e\u003c/ul\u003e\n| 1982 | Ruptura del sistema Bell\n\n{{\u003cdetails\u003e}}\n![unix](/docs/historia/images/unix.jpg)\n{{\u003c/details\u003e}}\n\n### GNU\n\nGNU:: GNU is not UNIX\n\n{{\u003cdetails\u003e}}\n![GNU](https://upload.wikimedia.org/wikipedia/commons/thumb/2/22/Heckert_GNU_white.svg/1024px-Heckert_GNU_white.svg.png)\n{{\u003c/details\u003e}}\n\n#### Richard Stallman\n![Stallman](/docs/historia/images/stallman.jpeg)\n\nConocido entre muchas otras cosas por:\n\n* Fundar el movimiento del software libre\n* Fundar La [Free Software fundation](https://www.fsf.org)\n* Lanzar el proyecto GNU\n* Desarrollar GNU compiller collection\n* Escribir la GNU General Public License (GPL)\n\n##### Las 4 libertades esenciales\n* Libertad 0: la libertad de usar el programa, con cualquier propósito (uso)\n* Libertad 1: la libertad de estudiar cómo funciona el programa y modificarlo, adaptándolo a las propias necesidades (estudio).\n* Libertad 2: la libertad de distribuir copias del programa, con lo cual se puede ayudar a otros usuarios (distribución).\n* Libertad 3: la libertad de mejorar el programa y hacer públicas esas mejoras a los demás, de modo que toda la comunidad se beneficie (mejora).\n\n\u003cp align=\"center\"\u003e\u003ciframe width=\"480\" height=\"270\" src=\"https://www.youtube.com/embed/8SdPLG-_wtA?start=58\u0026end=367\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"1\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\n{{\u003cdetails\u003e}}\n![](/docs/historia/images/stallman_uam.jpeg)\n{{\u003c/details\u003e}}\n\n|Año  | Evento|\n|:---:|---|\n| 1984|\u003cul\u003e\u003cli\u003eRichard Stallman empieza a trabajar en un sistema UNIX libre\u003c/li\u003e \u003cli\u003eInicia el proyecto [GNU](https://www.gnu.org/home.es.html)\u003c/li\u003e\u003c/ul\u003e\n| 1985 |\u003cul\u003e\u003cli\u003eStallman funda la [FSF](https://www.fsf.org/)\u003c/li\u003e \u003cli\u003eDesarrollo de la [licencia GPL](https://es.wikipedia.org/wiki/GNU_General_Public_License)\u003c/li\u003e\u003c/ul\u003e\n| 1990 | \u003cul\u003e\u003cli\u003e El proyecto GNU había producido un sistema operativo casi completo\u003c/li\u003e\u003c/ul\u003e\n\n### Linux\n#### Linus Torvalds\n\n![Linus](/docs/historia/images/linus.jpg)\n\nConocido entre muchas otras cosas por:\n* *Ser  el creador y desarrollador líder del Kernel Linux*\n* Ser el creador de git\n\u003e[!cite] Linus Torvalds\n\u003e\n\u003e¿Añoras los buenos días de minix 1.1, cuando los hombres eran hombres y escribían sus propios drivers?\n\u003e¿no tienes ningún proyecto y te mueres por hincarle el diente a un sistema operativo que puedas intentar modificar para tus necesidades?\n\u003e¿te empieza a parecer frustrante que todo funcione bien en minix?\n\u003e¿no más noches en vela para hacer que un ingenioso programa funcione?\n\u003eEntonces este post podría ser para ti :-)  ...\n\n[correo](https://www.cs.cmu.edu/~awb/linux.history.html)\n\n|Año  | Evento|\n|:---:|---|\n|1991 |Linus torvalds solicita ayuda de otros programadores anunciando su kernel 0.02 en comp.os.minix\n|1992 |la versión [0.12](https://mirrors.edge.kernel.org/pub/linux/kernel/Historic/old-versions/RELNOTES-0.12) empieza a utilizar la licencia gpl\n\n- [tiene un desarrollo muy activo](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/about/)\n### GNU/LINUX\n\n[Distribuciones](https://distrowatch.com/)\n\n|Año  | Evento|\n|:---:|---|\n| 1992 | primera distribución de linux\n| 1993 | surge slackware, Suse, Redhat, Debian [Distro_map](https://upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg)\n| 2004 | aparece ubuntu\n| 2022 | CentOS 8 es descontinuado\n\n* [Top500](https://www.top500.org/statistics/details/osfam/1)\n",
    "lastmodified": "2023-08-21T11:42:14.255607834-06:00",
    "tags": []
  },
  "/docs/vim/": {
    "title": "Vim",
    "content": "# Vim (VI IMproved)\n\n![logo vim](/docs/vim/images/vimlogo.png)\n\n## Lo más básico de lo básico\n### Piedra roseta\n\n|                            |                     |\n| ----------:                | :---------------    |\n| **Crear un archivo nuevo** | $ vim nuevo_archivo |\n| **Insertar texto**         | i   (Insert)        |\n| Seleccionar (modo visual)  | v   (Visual)        |\n| Copiar                     | y   (Yank)          |\n| Pegar                      | p   (Paste)         |\n| Guardar                    | :w   (Write)        |\n| Salir                      | :q   (Quit)         |\n| Forzar salida              | :q!   (Quit!)       |\n| **Guardar y Salir**        | :wq   (WriteQuit)   |\n\n## Los modos de vim\n### Modos principales\n\n|                      |            |\n| ------:              | :------    |\n| **Editar (default)** | \\\u003cesc\\\u003e    |\n| Insertar             | i          |\n| Visual               | v          |\n| Visual de bloque     | \\\u003cCTRL\\\u003e v |\n| **Comando**              | :     |\n\n## Modo editar\n\n\u003e **El modo estrella de Vim**\n\n\n\u003e [!info]- Vim habla...\n\u003e\n\u003e En inglés\n\n\u003e Es como crear \"oraciones\"\n\n## ¿Cómo hablar con vim?\n\n\n| Verbos              |          | Sustantivos/Movimientos     |        |\n| -----:              | :------- | -------:                    | :----- |\n| **Yank (copiar)**   | y        | **Word (palabra)**          | w      |\n| **Delete (borrar)** | d        | **Back (palabra anterior)** | b      |\n| Cambiar             | c        | 'til (hasta)                | t      |\n| Indentar            | \u003c        | Find (encontrar)            | f      |\n|                     |          | Parrafo                     | p      |\n|                     |          | Principo de linea           | 0      |\n|                     |          | Final de linea              | $      |\n\n\u003e [!tip] tip\n\u003e\n\u003e  [verbo] [número] [sustantivo]\n\n## Otras palabras\n| Adjetivos         |        | Especiales      |            |\n| ------:           | :----- | ------:         | :-----     |\n| **Número**        | \\#     | Borrar linea    | dd         |\n| Inner (dentro de) | i      | Copiar linea    | yy         |\n|                   |        | Idem, Lo mismo  | .          |\n|                   |        | Undo (Deshacer) | u          |\n|                   |        | Redo (Rehacer)  | \\\u003cCTRL\\\u003e r |\n\n## Modo comando\n\n\u003e [!info] info\n\u003e \n\u003e **Se accede con  ':'**\n\nPara usar comandos de vim:\n\n- Guardar (w)\n- Salir (q)\n- set [opción]\n- read [file]\n- read !\n- split y vsplit\n- Sustitución (s///)(sed)\n\n## Encontrar y Reemplazar\n\nLa sintaxis:\n\n```\n: [Rango]s/{patron}/{reemplazo}/{opciones}\n```\n'''\n\nRango:\n- lin,lfin : Sección\n- % : todo el documento\n-   : la linea actual\n\nopciones:\n- g : global, todas las ocurrencias por linea\n- c : preguntar confirmación\n- I : sensibilidad a las mayusculas\n\n## Ejemplos\n\n    : s/conejitos esponjosos/angeles descarnados de la noche/g\n\n    : 15,23s/guerra/amor/g\n\n    : %s/Shakespeare/Marlowe/gcI\n\n## Recomendaciones\nPara ampliar el conocimiento y aprovechar el insomnio\nsugiero:\n\n- El comando en linux **vimtutor**\n- El comando :help dentro de vim\n- El libro **Pro Vim** de Mark McDonnell\n- El link [your problem with vim is that you don't grok vi](https://gist.github.com/nifl/1178878)\n## Extras\n- macros\n- incrementos\n- cambiar a mayúsculas\n- Ejecutar un comando de bash\n- Modo block visual\n\n# Bram Moolenaar\n\n![moolenar|500](/docs/vim/images/moolenaar.jpg)\n\n\u003e 1961 - 3 agosto de 2023\n\u003e \n\u003e Ingeniero de sotware y activista holandés.  \n\u003e Creador, responsable y benevolente dictador de por vida de VIm.\n\n",
    "lastmodified": "2023-08-24T13:06:25.632014817-06:00",
    "tags": []
  }
}